[{"/Users/zackarydavis/repos/StudentPortal/client/src/index.js":"1","/Users/zackarydavis/repos/StudentPortal/client/src/App.js":"2","/Users/zackarydavis/repos/StudentPortal/client/src/reportWebVitals.js":"3","/Users/zackarydavis/repos/StudentPortal/client/src/pages/Home.js":"4","/Users/zackarydavis/repos/StudentPortal/client/src/pages/Signup.js":"5","/Users/zackarydavis/repos/StudentPortal/client/src/pages/SingleThought.js":"6","/Users/zackarydavis/repos/StudentPortal/client/src/pages/Login.js":"7","/Users/zackarydavis/repos/StudentPortal/client/src/pages/Profile.js":"8","/Users/zackarydavis/repos/StudentPortal/client/src/components/Footer/index.js":"9","/Users/zackarydavis/repos/StudentPortal/client/src/components/Header/index.js":"10","/Users/zackarydavis/repos/StudentPortal/client/src/utils/queries.js":"11","/Users/zackarydavis/repos/StudentPortal/client/src/utils/mutations.js":"12","/Users/zackarydavis/repos/StudentPortal/client/src/utils/auth.js":"13","/Users/zackarydavis/repos/StudentPortal/client/src/components/ThoughtList/index.js":"14","/Users/zackarydavis/repos/StudentPortal/client/src/components/CommentList/index.js":"15","/Users/zackarydavis/repos/StudentPortal/client/src/components/ThoughtForm/index.js":"16","/Users/zackarydavis/repos/StudentPortal/client/src/components/CommentForm/index.js":"17","/Users/zackarydavis/repos/StudentPortal/client/src/components/SideBar/index.js":"18"},{"size":500,"mtime":1634054195170,"results":"19","hashOfConfig":"20"},{"size":2277,"mtime":1634146462848,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1634054195173,"results":"22","hashOfConfig":"20"},{"size":907,"mtime":1634136305880,"results":"23","hashOfConfig":"20"},{"size":2658,"mtime":1634054195173,"results":"24","hashOfConfig":"20"},{"size":1562,"mtime":1634054195173,"results":"25","hashOfConfig":"20"},{"size":2558,"mtime":1634137550949,"results":"26","hashOfConfig":"20"},{"size":1724,"mtime":1634054195172,"results":"27","hashOfConfig":"20"},{"size":844,"mtime":1634054195147,"results":"28","hashOfConfig":"20"},{"size":1322,"mtime":1634054195148,"results":"29","hashOfConfig":"20"},{"size":908,"mtime":1634054195175,"results":"30","hashOfConfig":"20"},{"size":1077,"mtime":1634054195174,"results":"31","hashOfConfig":"20"},{"size":1043,"mtime":1634054195174,"results":"32","hashOfConfig":"20"},{"size":1502,"mtime":1634054195169,"results":"33","hashOfConfig":"20"},{"size":953,"mtime":1634054195147,"results":"34","hashOfConfig":"20"},{"size":3045,"mtime":1634062175654,"results":"35","hashOfConfig":"20"},{"size":2410,"mtime":1634054195146,"results":"36","hashOfConfig":"20"},{"size":1200,"mtime":1634145182077,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1fwvpxa",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zackarydavis/repos/StudentPortal/client/src/index.js",[],["77","78"],"/Users/zackarydavis/repos/StudentPortal/client/src/App.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/reportWebVitals.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/pages/Home.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/pages/Signup.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/pages/SingleThought.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/pages/Login.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/pages/Profile.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/components/Footer/index.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/components/Header/index.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/utils/queries.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/utils/mutations.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/utils/auth.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/components/ThoughtList/index.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/components/CommentList/index.js",[],"/Users/zackarydavis/repos/StudentPortal/client/src/components/ThoughtForm/index.js",["79"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS } from '../../utils/queries';\n\nconst ThoughtForm = () => {\n  const [formState, setFormState] = useState({\n    thoughtText: '',\n    thoughtAuthor: '',\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    // All returning data from Apollo Client queries/mutations return in a `data` field, followed by the the data returned by the request\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: { ...formState },\n      });\n\n      setFormState({\n        thoughtText: '',\n        thoughtAuthor: '',\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setFormState({ ...formState, [name]: value });\n      setCharacterCount(value.length);\n    } else if (name !== 'thoughtText') {\n      setFormState({ ...formState, [name]: value });\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      <p\n        className={`m-0 ${\n          characterCount === 280 || error ? 'text-danger' : ''\n        }`}\n      >\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-center\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"col-12\">\n          <textarea\n            name=\"thoughtText\"\n            placeholder=\"Here's a new thought...\"\n            value={formState.thoughtText}\n            className=\"form-input w-100\"\n            style={{ lineHeight: '1.5' }}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <div className=\"col-12 col-lg-9\">\n          <input\n            name=\"thoughtAuthor\"\n            placeholder=\"Add your name to get credit for the thought...\"\n            value={formState.thoughtAuthor}\n            className=\"form-input w-100\"\n            onChange={handleChange}\n          />\n        </div>\n\n        <div className=\"col-12 col-lg-3\">\n          <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n            Add Thought\n          </button>\n        </div>\n        {error && (\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\n            Something went wrong...\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default ThoughtForm;","/Users/zackarydavis/repos/StudentPortal/client/src/components/CommentForm/index.js",["80"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","/Users/zackarydavis/repos/StudentPortal/client/src/components/SideBar/index.js",["81","82","83","84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":34,"column":15,"nodeType":"92","messageId":"93","endLine":34,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":19,"column":15,"nodeType":"92","messageId":"93","endLine":19,"endColumn":19},{"ruleId":"90","severity":1,"message":"94","line":1,"column":10,"nodeType":"92","messageId":"93","endLine":1,"endColumn":15},{"ruleId":"95","severity":1,"message":"96","line":11,"column":13,"nodeType":"97","endLine":11,"endColumn":50},{"ruleId":"95","severity":1,"message":"96","line":17,"column":13,"nodeType":"97","endLine":17,"endColumn":40},{"ruleId":"95","severity":1,"message":"96","line":23,"column":13,"nodeType":"97","endLine":23,"endColumn":40},{"ruleId":"95","severity":1,"message":"96","line":29,"column":13,"nodeType":"97","endLine":29,"endColumn":40},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'split' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]